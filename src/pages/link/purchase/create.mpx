<template minapp='native' xlang='wxml'>
  <view class="container">
    <import src="template_goods_edit.wxml"></import>

    <form bindsubmit="onSubmit">
      <include src="../common/include_link_header_create.wxml" />
      <van-cell-group title="团购商品列表">
        <template is="goods-edit" wx:for="{{link.goods}}" wx:key="index" data="{{ goods:link.goods, validate,index }}"/>
      </van-cell-group>
      <view class="more" catchtap="addGoods">+添加更多商品</view>
      <van-cell-group title="接龙设置">
        <van-switch-cell
          name="enable_express"
          title="是否支持配送到家"
          data-key="enable_express"
          checked="{{link.enable_express}}"
          bind:change="onChange"
          border
        />
        <van-field
          wx:for="{{link.delivery}}" wx:key="{{index}}"
          label="提货点"
          placeholder="请输入自提点"
          icon="{{ link.delivery[index].name?'cross':'location'}}"
          data-key="delivery[{{index}}].name"
          data-index="{{index}}"
          value="{{ link.delivery[index].name }}"
          bind:change="onChange"
          bind:click-icon="{{link.delivery[index].name?'onDelLocation':'onSetLocation'}}"
          bind:focus="{{link.delivery[index].name?'':'onSetLocation'}}"
        />
      </van-cell-group>
      <view class="more" catchtap="onAddLocation">+添加提货点</view>
      <button type="primary" open-type="getUserInfo" style="margin-top:20rpx;" form-type="submit">发布接龙</button>
    </form>
  </view>
</template>

<script>
import mpx, {createPage} from "@mpxjs/core";
// import Notify from 'vant-weapp/notify/notify'
import Validator from "../../../utils/validator.js"
// 引用api
import link from '../../../api/link.js'
let api = { link }

const validator = new Validator()
// 备注  ^goods\[\d+\]\.price$
// 更改  在字符串中  \   不被解析   需要输入 \\
const validateList = {
  'title': [
    { rule: 'required'},
  ],
  'goods\\[\\d+\\]\\.name': [
    { rule: 'required', message: '此处为必填项，请输入商品名称' },
  ],
  'goods\\[\\d+\\]\\.price': [
    { rule: 'required', message: '此处为必填项，请输入商品价钱' },
  ],
  'goods\\[\\d+\\]\\.specification': [
    { rule: 'required', message: '此处为必填项，请输入商品规格' },
  ],
  'delivery\\[\\d+\\]\\.address':[
    { rule: 'required', message: '此处为必填项，请输入地址' },
  ],
}

createPage({
  data: {
    link: {
      id:"22",
      title: '',
      content: "",
      goods: [{name: '西红柿', price: 300, specification: '500g'}],
      enable_express: false,
      delivery: [{}],
    },
    validate: {},
    images:[],
  },

  onChange(ev) {
    let {key} = ev.target.dataset
    this.setData({
      ['link.'+key]: ev.detail
    })
  },

  onChangeImages(ev){
    this.images = ev.detail
    this.$forceUpdate(this.images)
  },

  onBlur(ev){
    let { key }= ev.target.dataset
    let val = ev.detail.value
    let result = validator.validateFormItem(key,val,validateList)
    this.validate[result.key] = result.message
    this.$forceUpdate(this.validate)
    // console.log(this.validate)
    // 第一个console数据最新   第二个console数据滞后
    // console.log(this.data.validate)
  },

  onSubmit(ev) {
    let dataList = ev.detail.value
    let result = validator.validateForm(dataList,validateList)
    this.validate = result

    let verify = true
    for(let key in result){
      if(result[key]){
          verify = false;
      }
    }
    let link = this.link
    // console.log(this.data.link)
    // console.log(this.link)
    // 不用setData  换成mpx封装的this进行数据监听刷新
    // link 就得用this.link获取 变成了类似  mpx的属性了
    // 反正不影响  就是做个笔记

    // if(verify){
    //   api.link.create(dataTest).then((res)=>{
    //     console.log(res)
    //   })
    // }


    // 以下仅仅是测试代码
    // 获取失败   但是Postman软件发送能返回2
    // let dataTest = {
    //     "id": 12,
    //     "title": "每日水果团（演示）3",
    //     "content": "4加拿大车厘子和香蕉，喜欢吃的，一起来团吧。仅限新龙城用户购买。演示案例，不发货，不退款，请勿大额支付。不发货，不退款，请勿大额支付。不发货，不退款，请勿大额支付。",
    //     "images_count": 3,
    //     "goods": [
    //         {"name": "加拿大车厘子12", "price": 1050, "specification": "3斤/份", "stock": 50 },
    //         {"name": "香蕉", "price": 530, "specification": "5斤/份", "stock": 50 }
    //     ],
    //     "delivery": [{"name": "海淀区人民政府", "address": "北京市海淀区长春桥路17号", "latitude": 39.95933, "longitude": 116.29845}],
    //     "enable_express": false,
    //     "status": 1
    // }
    // console.log(api.link.create(dataTest))
    // api.link.create(dataTest).then((res)=>{
    //     console.log(res)
    // })
    
    // 图片数据更新完成
    let images = this.images
    if(!images){
      return
    }
    // 更新临时图片地址
    for (let i = 0; i < images.length; i++) {
      const item = images[i];
      wx.cloud.uploadFile({
        cloudPath: `links/${link.id}/${i}.jpg`, // TODO: 设置目录路径
        filePath: item
      }).then((res) => {
        images[i]=res.fileID
      })
    }
    this.images = images;
    this.$forceUpdate(this.images)
  },

  addGoods(){
    this.link.goods.push({})
  },

  //获取位置
  onSetLocation(ev) {
    let { index } = ev.target.dataset;

    mpx.chooseLocation().then(res => {
      this.link.delivery[index] = res
    })
  },

  //删除位置事件
  onDelLocation(ev) {
    if (this.link.delivery.length <= 1) {
      this.link.delivery[0] = {}
      return
    }

    let { index } = ev.target.dataset
    this.link.delivery.splice(index, 1)
  },

  //添加位置
  onAddLocation() {
    this.link.delivery.push({})
  },

});
</script>

<style>
@import url('../common/include_link_header.wxss');

.goods-item {
  margin-top: 10rpx;
}

</style>

<script  type='application/json' lang='json'>
{
  "navigationBarTitleText": "创建团购活动",
  "usingComponents": {
    "em-images": "../../../components/images",
    "van-cell": "vant-weapp/lib/cell",
    "van-cell-group": "vant-weapp/lib/cell-group",
    "van-field": "vant-weapp/lib/field",
    "van-switch-cell": "vant-weapp/lib/switch-cell",
    "van-notify": "vant-weapp/lib/notify"
  }
}
</script>

